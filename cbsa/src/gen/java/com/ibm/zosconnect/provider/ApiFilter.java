/**************************
 * Copyright IBM Corp. 2023
 **************************/

/**
 * This file is automatically generated by the zosConnectApiFilter task.
 * DO NOT CHANGE THIS FILE.
 */
package com.ibm.zosconnect.provider;

import java.io.IOException;
import java.util.logging.Logger;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;

import com.ibm.zosconnect.engine.FilterEntrypoint;

@WebFilter(urlPatterns = "/*", asyncSupported = true)
public class ApiFilter implements Filter {
    static final String copyright_notice = "\nPID 5655-CE3, 5655-CE5 Copyright IBM Corp. 2023\n";

    private static final Logger LOGGER = Logger.getLogger(ApiFilter.class.getName());

    /** {@inheritDoc} */
    @Override
    public void init(FilterConfig config) throws ServletException {
        LOGGER.entering(ApiFilter.class.getName(), "init", config);
        LOGGER.exiting(ApiFilter.class.getName(), "init");
    }

    /** {@inheritDoc} */
    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
                    throws IOException, ServletException {
        LOGGER.entering(ApiFilter.class.getName(), "doFilter", new Object[] { request, response, chain });
        FilterEntrypoint.entry(request, response);
        try {
            chain.doFilter(request, response);
        } finally {
            FilterEntrypoint.checkEarlyFailure(request, response);
        }
        LOGGER.exiting(ApiFilter.class.getName(), "doFilter");
    }

    /** {@inheritDoc} */
    @Override
    public void destroy() {
        LOGGER.entering(ApiFilter.class.getName(), "destroy");
        LOGGER.exiting(ApiFilter.class.getName(), "destroy");
    }
}
